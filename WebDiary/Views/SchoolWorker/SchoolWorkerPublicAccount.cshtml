@{
    Layout = "_Layout";
}
@{
    ViewData["Title"] = "SchoolWorkerPublicAccount";
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>School Worker Public Account</title>
</head>
<body>
    <div class="columns">
        <div class="column is-one-third">
            <div class="card">
                <header class="card-header">
                    <p class="card-header-title">
                        @Model.GetSchoolWorker.Person.UserProfile.FirstName @Model.GetSchoolWorker.Person.UserProfile.MiddleName @Model.GetSchoolWorker.Person.UserProfile.LastName
                    </p>
                </header>
                <div class="card-image pt-3 pl-3 pr-3">
                    <figure class="image ">
                        <img src="@Model.GetSchoolWorker.Person.UserProfile.Image" class="" alt="Placeholder image">
                    </figure>
                </div>
                <div class="card-content m-0 pb-1">
                    <p class="subtitle is-5 is-family-code has-text-link m-0 has-text-weight-bold pb-1">@Model.GetSchoolWorker.RoleDescription</p>
                    <p class="subtitle is-6 is-uppercase is-family-code has-text-grey">Email:</p>
                    <p class="title is-6">@Model.GetSchoolWorker.Person.UserProfile.User.Email</p>
                    <p class="subtitle is-6 is-uppercase is-family-code has-text-grey">Phone Number:</p>
                    <p class="title is-6">@Model.GetSchoolWorker.Person.UserProfile.User.PhoneNumber</p>
                    <p class="subtitle is-6 is-uppercase is-family-code has-text-grey">Gender:</p>
                    <p class="title is-6">@Model.GetSchoolWorker.Person.UserProfile.Gender</p>
                    <p class="subtitle is-6 is-uppercase is-family-code has-text-grey">Birth Date:</p>
                    <p class="title is-6">@Model.GetSchoolWorker.Person.UserProfile.BirthDate.ToShortDateString()</p>
                    @{
                        if (User.IsInRole("Director") || User.IsInRole("Manager"))
                        {
                            <footer class="card-footer mb-0 pb-0">
                                <a href="#" class="card-footer-item">Edit profile</a>
                            </footer>
                        }
                        else
                        {
                            <footer class="card-footer mb-0 pb-0">
                            </footer>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="column">
            <div class="card">
                <div class="card-content">
                    @{
                        if (Model.GetSchoolWorker.IsClassTeacher)
                        {
                            <section>
                                <p class="subtitle is-5 is-uppercase is-family-code has-text-grey pb-0 mb-0 mb-2">Class Teacher in <a> @Model.GetSchoolWorker.Class.Name</a></p>
                            </section>
                        }
                    }
                    <section>
                        <p class="subtitle is-6 is-uppercase is-family-code has-text-grey pb-0 mb-0">School:</p>
                        <section><a class="title is-6 mt-0">@Model.GetSchoolWorker.School.Name</a></section>
                    </section>


                    <section>
                        <p class="subtitle is-6 is-uppercase is-family-code has-text-grey pb-0 mb-0 mt-2">Subjects:</p>
                        @{
                            foreach (Subject subject in Model.GetSchoolWorker.Subjects)
                            {
                                @await Html.PartialAsync("_SubjectCard", subject);
                            }
                        }
                    </section>

                </div>

            </div>
        </div>
    </div>
</body>
</html>
